# Even Fibonacci numbers https://projecteuler.net/problem=2
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

# seq[0] + seq[1] = seq[2]

def fibonacci_even_sum (num)
  seq = [0,1]
  sum = 0
  i = 0
  sum = 0 if seq.last > num
  while seq.last < num do
    seq << seq[i] + seq[i+1]
    i += 1
    sum += seq.last if seq.last.even?  && seq.last <= num
  end
  return sum
end

fibonacci_even_sum 4000000
#4,613,732
